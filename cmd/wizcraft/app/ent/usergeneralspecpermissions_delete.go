// Code generated by ent, DO NOT EDIT.

package ent

import (
	"MSaaS-Framework/MSaaS/cmd/wizcraft/app/ent/predicate"
	"MSaaS-Framework/MSaaS/cmd/wizcraft/app/ent/usergeneralspecpermissions"
	"context"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// UserGeneralSpecPermissionsDelete is the builder for deleting a UserGeneralSpecPermissions entity.
type UserGeneralSpecPermissionsDelete struct {
	config
	hooks    []Hook
	mutation *UserGeneralSpecPermissionsMutation
}

// Where appends a list predicates to the UserGeneralSpecPermissionsDelete builder.
func (ugspd *UserGeneralSpecPermissionsDelete) Where(ps ...predicate.UserGeneralSpecPermissions) *UserGeneralSpecPermissionsDelete {
	ugspd.mutation.Where(ps...)
	return ugspd
}

// Exec executes the deletion query and returns how many vertices were deleted.
func (ugspd *UserGeneralSpecPermissionsDelete) Exec(ctx context.Context) (int, error) {
	return withHooks(ctx, ugspd.sqlExec, ugspd.mutation, ugspd.hooks)
}

// ExecX is like Exec, but panics if an error occurs.
func (ugspd *UserGeneralSpecPermissionsDelete) ExecX(ctx context.Context) int {
	n, err := ugspd.Exec(ctx)
	if err != nil {
		panic(err)
	}
	return n
}

func (ugspd *UserGeneralSpecPermissionsDelete) sqlExec(ctx context.Context) (int, error) {
	_spec := sqlgraph.NewDeleteSpec(usergeneralspecpermissions.Table, sqlgraph.NewFieldSpec(usergeneralspecpermissions.FieldID, field.TypeUUID))
	if ps := ugspd.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	affected, err := sqlgraph.DeleteNodes(ctx, ugspd.driver, _spec)
	if err != nil && sqlgraph.IsConstraintError(err) {
		err = &ConstraintError{msg: err.Error(), wrap: err}
	}
	ugspd.mutation.done = true
	return affected, err
}

// UserGeneralSpecPermissionsDeleteOne is the builder for deleting a single UserGeneralSpecPermissions entity.
type UserGeneralSpecPermissionsDeleteOne struct {
	ugspd *UserGeneralSpecPermissionsDelete
}

// Where appends a list predicates to the UserGeneralSpecPermissionsDelete builder.
func (ugspdo *UserGeneralSpecPermissionsDeleteOne) Where(ps ...predicate.UserGeneralSpecPermissions) *UserGeneralSpecPermissionsDeleteOne {
	ugspdo.ugspd.mutation.Where(ps...)
	return ugspdo
}

// Exec executes the deletion query.
func (ugspdo *UserGeneralSpecPermissionsDeleteOne) Exec(ctx context.Context) error {
	n, err := ugspdo.ugspd.Exec(ctx)
	switch {
	case err != nil:
		return err
	case n == 0:
		return &NotFoundError{usergeneralspecpermissions.Label}
	default:
		return nil
	}
}

// ExecX is like Exec, but panics if an error occurs.
func (ugspdo *UserGeneralSpecPermissionsDeleteOne) ExecX(ctx context.Context) {
	if err := ugspdo.Exec(ctx); err != nil {
		panic(err)
	}
}
